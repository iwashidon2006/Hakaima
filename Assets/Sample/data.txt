	public static Dictionary<int, EnemyData> enemyDataList = new Dictionary<int, EnemyData> (){
		{(int)Enemy.Type.Person,
			new EnemyData {
				score			= 0,
				speed			= 1f,
				angrySpeed		= 3f,
				angryTime		= 3,
				fallTime		= 1,
				isFly			= false,
				isAvoidHole		= true,
				patternIndex	= 8,
				lifeCount		= 1,
			}
		},
		{(int)Enemy.Type.Ghost,
			new EnemyData {
				score			= 600,
				speed			= 1.6f,
				angrySpeed		= 2f,
				angryTime		= 0,
				fallTime		= 0,
				isFly			= true,
				isAvoidHole		= false,
				patternIndex	= 2,
				lifeCount		= 1,
			}
		},
		{(int)Enemy.Type.Soul,
			new EnemyData {
				score			= 700,
				speed			= 1f,
				angrySpeed		= 2f,
				angryTime		= 0,
				fallTime		= 0,
				isFly			= true,
				isAvoidHole		= false,
				patternIndex	= 3,
				lifeCount		= 1,
			}
		},
		{(int)Enemy.Type.Skeleton,
			new EnemyData {
				score			= 100,
				speed			= 1f,
				angrySpeed		= 2f,
				angryTime		= 8,
				fallTime		= 8,
				isFly			= false,
				isAvoidHole		= false,
				patternIndex	= 1,
				lifeCount		= 1,
			}
		},
		{(int)Enemy.Type.Mummy,
			new EnemyData {
				score			= 300,
				speed			= 1.2f,
				angrySpeed		= 2f,
				angryTime		= 8,
				fallTime		= 8,
				isFly			= false,
				isAvoidHole		= false,
				patternIndex	= 6,
				lifeCount		= 1,
			}
		},
		{(int)Enemy.Type.Shadowman,
			new EnemyData {
				score			= 500,
				speed			= 3f,
				angrySpeed		= 6f,
				angryTime		= 4,
				fallTime		= 8,
				isFly			= false,
				isAvoidHole		= false,
				patternIndex	= 4,
				lifeCount		= 1,
			}
		},
		{(int)Enemy.Type.Golem,
			new EnemyData {
				score			= 1000,
				speed			= 2f,
				angrySpeed		= 4.8f,
				angryTime		= 4,
				fallTime		= 5,
				isFly			= false,
				isAvoidHole		= false,
				patternIndex	= 7,
				lifeCount		= 1,
			}
		},
		{(int)Enemy.Type.Goblin,
			new EnemyData {
				score			= 900,
				speed			= 2.4f,
				angrySpeed		= 4.8f,
				angryTime		= 8,
				fallTime		= 0,
				isFly			= true,
				isAvoidHole		= false,
				patternIndex	= 4,
				lifeCount		= 1,
			}
		},
		{(int)Enemy.Type.Parasol,
			new EnemyData {
				score			= 1300,
				speed			= 2f,
				angrySpeed		= 4f,
				angryTime		= 8,
				fallTime		= 5,
				isFly			= false,
				isAvoidHole		= false,
				patternIndex	= 2,
				lifeCount		= 1,
			}
		},
		{(int)Enemy.Type.Kappa,
			new EnemyData {
				score			= 1500,
				speed			= 3.2f,
				angrySpeed		= 12f,
				angryTime		= 3,
				fallTime		= 5,
				isFly			= false,
				isAvoidHole		= false,
				patternIndex	= 4,
				lifeCount		= 1,
			}
		},
		{(int)Enemy.Type.Tengu,
			new EnemyData {
				score			= 0,
				speed			= 3f,
				angrySpeed		= 6f,
				angryTime		= 10,
				fallTime		= 1,
				isFly			= false,
				isAvoidHole		= true,
				patternIndex	= 5,
				lifeCount		= 3,
			}
		},
	};


	public static Dictionary<int, EnemyPatternData> enemyPatternDataList = new Dictionary<int, EnemyPatternData> (){
		{0,
			new EnemyPatternData {
				rateWait			= 0,
				rateStraight		= 0,
				rateTurnRight		= 0,
				rateTurnLeft		= 0,
				rateTurnBack		= 0,
				rateFollow			= 100,
			}
		},
		{1,
			new EnemyPatternData {
				rateWait			= 25,
				rateStraight		= 30,
				rateTurnRight		= 15,
				rateTurnLeft		= 15,
				rateTurnBack		= 15,
				rateFollow			= 0,
			}
		},
		{2,
			new EnemyPatternData {
				rateWait			= 50,
				rateStraight		= 15,
				rateTurnRight		= 15,
				rateTurnLeft		= 15,
				rateTurnBack		= 5,
				rateFollow			= 0,
			}
		},
		{3,
			new EnemyPatternData {
				rateWait			= 20,
				rateStraight		= 15,
				rateTurnRight		= 30,
				rateTurnLeft		= 30,
				rateTurnBack		= 5,
				rateFollow			= 0,
			}
		},
		{4,
			new EnemyPatternData {
				rateWait			= 5,
				rateStraight		= 30,
				rateTurnRight		= 30,
				rateTurnLeft		= 30,
				rateTurnBack		= 5,
				rateFollow			= 0,
			}
		},
		{5,
			new EnemyPatternData {
				rateWait			= 20,
				rateStraight		= 20,
				rateTurnRight		= 20,
				rateTurnLeft		= 20,
				rateTurnBack		= 20,
				rateFollow			= 0,
			}
		},
		{6,
			new EnemyPatternData {
				rateWait			= 10,
				rateStraight		= 20,
				rateTurnRight		= 10,
				rateTurnLeft		= 10,
				rateTurnBack		= 0,
				rateFollow			= 50,
			}
		},
		{7,
			new EnemyPatternData {
				rateWait			= 15,
				rateStraight		= 30,
				rateTurnRight		= 15,
				rateTurnLeft		= 15,
				rateTurnBack		= 5,
				rateFollow			= 20,
			}
		},
		{8,
			new EnemyPatternData {
				rateWait			= 0,
				rateStraight		= 5,
				rateTurnRight		= 5,
				rateTurnLeft		= 5,
				rateTurnBack		= 5,
				rateFollow			= 80,
			}
		},
		{20,
			new EnemyPatternData {
				rateWait			= 20,
				rateStraight		= 30,
				rateTurnRight		= 20,
				rateTurnLeft		= 20,
				rateTurnBack		= 10,
				rateFollow			= 0,
			}
		},
	};


	public static Dictionary<int, TerrainData> terrainDataList = new Dictionary<int, TerrainData> (){
		{(int)Terrain.Type.None,
			new TerrainData {
				isThrough	= true,
				isDigging		= false,
				isSlip			= false,
			}
		},
		{(int)Terrain.Type.Soil,
			new TerrainData {
				isThrough	= true,
				isDigging		= true,
				isSlip			= false,
			}
		},
		{(int)Terrain.Type.Grass,
			new TerrainData {
				isThrough	= true,
				isDigging		= true,
				isSlip			= false,
			}
		},
		{(int)Terrain.Type.Muddy,
			new TerrainData {
				isThrough	= true,
				isDigging		= true,
				isSlip			= false,
			}
		},
		{(int)Terrain.Type.Pavement,
			new TerrainData {
				isThrough	= true,
				isDigging		= false,
				isSlip			= false,
			}
		},
		{(int)Terrain.Type.Ice,
			new TerrainData {
				isThrough	= true,
				isDigging		= true,
				isSlip			= true,
			}
		},
		{(int)Terrain.Type.River,
			new TerrainData {
				isThrough	= false,
				isDigging		= false,
				isSlip			= false,
			}
		},
		{(int)Terrain.Type.Bridge,
			new TerrainData {
				isThrough	= true,
				isDigging		= false,
				isSlip			= false,
			}
		},
		{(int)Terrain.Type.BridgeVertical,
			new TerrainData {
				isThrough	= true,
				isDigging		= false,
				isSlip			= false,
			}
		},
		{(int)Terrain.Type.BridgeHorizontal,
			new TerrainData {
				isThrough	= true,
				isDigging		= false,
				isSlip			= false,
			}
		},
	};


	public static Dictionary<int, ObstacleData> obstacleDataList = new Dictionary<int, ObstacleData> (){
		{(int)Obstacle.Type.None,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.Tree,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.Stone,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.Tomb,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.TombCollapse,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.TombCollapseEnd,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.TombPiece,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.TombPieceEnd,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.CartRight,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.CartLeft,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.Well,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.Bale,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.Bathtub,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.BathtubCollapse,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.BathtubCollapseEnd,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.Stockpile,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.StockpileCollapse,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.StockpileCollapseEnd,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.Signboard,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.Tower,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.FallenTree,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.Stump,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.Bucket,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.Lantern,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.StupaFence,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.Stupa,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.LargeTreeRight,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.LargeTreeLeft,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.Rubble,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.RubbleOff,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.Picket,
			new ObstacleData {
				isThrough	= false,
			}
		},
		{(int)Obstacle.Type.FallTombPiece,
			new ObstacleData {
				isThrough	= true,
			}
		},
		{(int)Obstacle.Type.FallTombPieceEnd,
			new ObstacleData {
				isThrough	= true,
			}
		},
	};


	public static List<StageData> stageDataList = new List<StageData> (){
		new StageData {
			limitTime = 60f,
			darkness = 0f,
			mist = 0f,
			sound = 0,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		160},
				{Terrain.Type.Grass,		10},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		0},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		11},
				{Obstacle.Type.Stone,		5},
				{Obstacle.Type.Tomb,		43},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		0},
				{Obstacle.Type.Bale,		0},
				{Obstacle.Type.Bathtub,		0},
				{Obstacle.Type.Stockpile,		0},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		0},
				{Obstacle.Type.FallenTree,		0},
				{Obstacle.Type.Stump,		0},
				{Obstacle.Type.Bucket,		6},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		3},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		0},
				{Enemy.Type.Ghost,		0},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		2},
				{Enemy.Type.Mummy,		0},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		0},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		0},
				{Item.Type.Hoe,		0},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		0},
				{Item.Type.Parasol,		0},
			},
		},
		new StageData {
			limitTime = 90f,
			darkness = 0f,
			mist = 0f,
			sound = 0,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		140},
				{Terrain.Type.Grass,		20},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		10},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		10},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		43},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		0},
				{Obstacle.Type.Bale,		3},
				{Obstacle.Type.Bathtub,		0},
				{Obstacle.Type.Stockpile,		0},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		0},
				{Obstacle.Type.FallenTree,		1},
				{Obstacle.Type.Stump,		0},
				{Obstacle.Type.Bucket,		5},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		3},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		1},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		1},
				{Enemy.Type.Ghost,		0},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		2},
				{Enemy.Type.Mummy,		0},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		0},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		0},
				{Item.Type.Hoe,		0},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		10},
				{Item.Type.Parasol,		1},
			},
		},
		new StageData {
			limitTime = 90f,
			darkness = 0f,
			mist = 0f,
			sound = 2,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		30},
				{Terrain.Type.Grass,		140},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		0},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		0},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		46},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		2},
				{Obstacle.Type.Bale,		0},
				{Obstacle.Type.Bathtub,		0},
				{Obstacle.Type.Stockpile,		0},
				{Obstacle.Type.Signboard,		1},
				{Obstacle.Type.Tower,		0},
				{Obstacle.Type.FallenTree,		0},
				{Obstacle.Type.Stump,		0},
				{Obstacle.Type.Bucket,		1},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		4},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		1},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		1},
				{Enemy.Type.Ghost,		0},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		2},
				{Enemy.Type.Mummy,		1},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		0},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		10},
				{Item.Type.Hoe,		10},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		8},
				{Item.Type.Parasol,		2},
			},
		},
		new StageData {
			limitTime = 90f,
			darkness = 0f,
			mist = 0f,
			sound = 2,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		141},
				{Terrain.Type.Grass,		30},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		-1},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		11},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		46},
				{Obstacle.Type.CartRight,		1},
				{Obstacle.Type.Well,		0},
				{Obstacle.Type.Bale,		0},
				{Obstacle.Type.Bathtub,		0},
				{Obstacle.Type.Stockpile,		2},
				{Obstacle.Type.Signboard,		1},
				{Obstacle.Type.Tower,		0},
				{Obstacle.Type.FallenTree,		0},
				{Obstacle.Type.Stump,		0},
				{Obstacle.Type.Bucket,		5},
				{Obstacle.Type.Lantern,		1},
				{Obstacle.Type.StupaFence,		4},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		3},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		1},
				{Enemy.Type.Ghost,		0},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		1},
				{Enemy.Type.Mummy,		2},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		0},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		8},
				{Item.Type.Hoe,		8},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		8},
				{Item.Type.Parasol,		3},
			},
		},
		new StageData {
			limitTime = 150f,
			darkness = 0f,
			mist = 0.4f,
			sound = 1,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		70},
				{Terrain.Type.Grass,		40},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		0},
				{Terrain.Type.Ice,		60},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		7},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		29},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		0},
				{Obstacle.Type.Bale,		2},
				{Obstacle.Type.Bathtub,		0},
				{Obstacle.Type.Stockpile,		2},
				{Obstacle.Type.Signboard,		1},
				{Obstacle.Type.Tower,		0},
				{Obstacle.Type.FallenTree,		2},
				{Obstacle.Type.Stump,		0},
				{Obstacle.Type.Bucket,		3},
				{Obstacle.Type.Lantern,		5},
				{Obstacle.Type.StupaFence,		9},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		1},
				{Obstacle.Type.Rubble,		5},
				{Obstacle.Type.Picket,		2},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		1},
				{Enemy.Type.Ghost,		0},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		1},
				{Enemy.Type.Mummy,		2},
				{Enemy.Type.Shadowman,		1},
				{Enemy.Type.Golem,		0},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		8},
				{Item.Type.Hoe,		8},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		8},
				{Item.Type.Parasol,		3},
			},
		},
		new StageData {
			limitTime = 120f,
			darkness = 0.4f,
			mist = 0f,
			sound = 1,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		0},
				{Terrain.Type.Grass,		100},
				{Terrain.Type.Muddy,		10},
				{Terrain.Type.Pavement,		60},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		0},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		36},
				{Obstacle.Type.CartRight,		3},
				{Obstacle.Type.Well,		0},
				{Obstacle.Type.Bale,		0},
				{Obstacle.Type.Bathtub,		1},
				{Obstacle.Type.Stockpile,		0},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		3},
				{Obstacle.Type.FallenTree,		1},
				{Obstacle.Type.Stump,		1},
				{Obstacle.Type.Bucket,		0},
				{Obstacle.Type.Lantern,		2},
				{Obstacle.Type.StupaFence,		6},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		1},
				{Enemy.Type.Ghost,		1},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		2},
				{Enemy.Type.Shadowman,		2},
				{Enemy.Type.Golem,		0},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		8},
				{Item.Type.Parasol,		3},
			},
		},
		new StageData {
			limitTime = 90f,
			darkness = 0f,
			mist = 0f,
			sound = 0,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		130},
				{Terrain.Type.Grass,		40},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		0},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		1},
				{Terrain.Type.Bridge,		5},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		11},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		56},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		2},
				{Obstacle.Type.Bale,		0},
				{Obstacle.Type.Bathtub,		1},
				{Obstacle.Type.Stockpile,		0},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		0},
				{Obstacle.Type.FallenTree,		2},
				{Obstacle.Type.Stump,		1},
				{Obstacle.Type.Bucket,		5},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		6},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		5},
				{Obstacle.Type.Picket,		2},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		0},
				{Enemy.Type.Ghost,		1},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		3},
				{Enemy.Type.Shadowman,		2},
				{Enemy.Type.Golem,		0},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		8},
				{Item.Type.Parasol,		3},
			},
		},
		new StageData {
			limitTime = 120f,
			darkness = 0.2f,
			mist = 0f,
			sound = 2,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		90},
				{Terrain.Type.Grass,		60},
				{Terrain.Type.Muddy,		20},
				{Terrain.Type.Pavement,		0},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		20},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		50},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		2},
				{Obstacle.Type.Bale,		0},
				{Obstacle.Type.Bathtub,		0},
				{Obstacle.Type.Stockpile,		2},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		0},
				{Obstacle.Type.FallenTree,		1},
				{Obstacle.Type.Stump,		2},
				{Obstacle.Type.Bucket,		3},
				{Obstacle.Type.Lantern,		1},
				{Obstacle.Type.StupaFence,		0},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		0},
				{Enemy.Type.Ghost,		1},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		1},
				{Enemy.Type.Shadowman,		5},
				{Enemy.Type.Golem,		0},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		8},
				{Item.Type.Parasol,		1},
			},
		},
		new StageData {
			limitTime = 150f,
			darkness = 0.3f,
			mist = 0.2f,
			sound = 1,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		61},
				{Terrain.Type.Grass,		30},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		-1},
				{Terrain.Type.Ice,		80},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		6},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		34},
				{Obstacle.Type.CartRight,		2},
				{Obstacle.Type.Well,		0},
				{Obstacle.Type.Bale,		3},
				{Obstacle.Type.Bathtub,		0},
				{Obstacle.Type.Stockpile,		2},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		1},
				{Obstacle.Type.FallenTree,		2},
				{Obstacle.Type.Stump,		2},
				{Obstacle.Type.Bucket,		3},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		4},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		2},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		0},
				{Enemy.Type.Ghost,		0},
				{Enemy.Type.Soul,		2},
				{Enemy.Type.Skeleton,		1},
				{Enemy.Type.Mummy,		0},
				{Enemy.Type.Shadowman,		2},
				{Enemy.Type.Golem,		1},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		8},
				{Item.Type.Parasol,		0},
			},
		},
		new StageData {
			limitTime = 120f,
			darkness = 0.3f,
			mist = 0.2f,
			sound = 0,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		40},
				{Terrain.Type.Grass,		130},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		0},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		2},
				{Terrain.Type.Bridge,		2},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		11},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		56},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		4},
				{Obstacle.Type.Bale,		3},
				{Obstacle.Type.Bathtub,		1},
				{Obstacle.Type.Stockpile,		0},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		1},
				{Obstacle.Type.FallenTree,		1},
				{Obstacle.Type.Stump,		2},
				{Obstacle.Type.Bucket,		2},
				{Obstacle.Type.Lantern,		5},
				{Obstacle.Type.StupaFence,		6},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		3},
				{Enemy.Type.Ghost,		1},
				{Enemy.Type.Soul,		2},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		0},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		2},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		8},
				{Item.Type.Parasol,		3},
			},
		},
		new StageData {
			limitTime = 120f,
			darkness = 0.3f,
			mist = 0.2f,
			sound = 0,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		45},
				{Terrain.Type.Grass,		45},
				{Terrain.Type.Muddy,		80},
				{Terrain.Type.Pavement,		0},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		6},
				{Obstacle.Type.Stone,		0},
				{Obstacle.Type.Tomb,		36},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		0},
				{Obstacle.Type.Bale,		3},
				{Obstacle.Type.Bathtub,		1},
				{Obstacle.Type.Stockpile,		1},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		3},
				{Obstacle.Type.FallenTree,		1},
				{Obstacle.Type.Stump,		2},
				{Obstacle.Type.Bucket,		0},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		6},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		2},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		2},
				{Enemy.Type.Ghost,		0},
				{Enemy.Type.Soul,		2},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		0},
				{Enemy.Type.Shadowman,		2},
				{Enemy.Type.Golem,		2},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		4},
				{Item.Type.Parasol,		2},
			},
		},
		new StageData {
			limitTime = 180f,
			darkness = 0f,
			mist = 0f,
			sound = 2,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		41},
				{Terrain.Type.Grass,		40},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		-1},
				{Terrain.Type.Ice,		90},
				{Terrain.Type.River,		2},
				{Terrain.Type.Bridge,		3},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		5},
				{Obstacle.Type.Stone,		40},
				{Obstacle.Type.Tomb,		-7},
				{Obstacle.Type.CartRight,		2},
				{Obstacle.Type.Well,		0},
				{Obstacle.Type.Bale,		3},
				{Obstacle.Type.Bathtub,		1},
				{Obstacle.Type.Stockpile,		2},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		2},
				{Obstacle.Type.FallenTree,		2},
				{Obstacle.Type.Stump,		2},
				{Obstacle.Type.Bucket,		2},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		3},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		0},
				{Enemy.Type.Ghost,		0},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		5},
				{Enemy.Type.Mummy,		2},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		2},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		1},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		4},
				{Item.Type.Parasol,		2},
			},
		},
		new StageData {
			limitTime = 120f,
			darkness = 0.4f,
			mist = 0.2f,
			sound = 1,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		120},
				{Terrain.Type.Grass,		50},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		0},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		1},
				{Terrain.Type.Bridge,		4},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		18},
				{Obstacle.Type.Stone,		0},
				{Obstacle.Type.Tomb,		58},
				{Obstacle.Type.CartRight,		4},
				{Obstacle.Type.Well,		2},
				{Obstacle.Type.Bale,		2},
				{Obstacle.Type.Bathtub,		0},
				{Obstacle.Type.Stockpile,		2},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		0},
				{Obstacle.Type.FallenTree,		0},
				{Obstacle.Type.Stump,		0},
				{Obstacle.Type.Bucket,		8},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		15},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		2},
				{Enemy.Type.Ghost,		2},
				{Enemy.Type.Soul,		2},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		0},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		0},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		2},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		4},
				{Item.Type.Parasol,		2},
			},
		},
		new StageData {
			limitTime = 150f,
			darkness = 0.4f,
			mist = 0.6f,
			sound = 2,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		50},
				{Terrain.Type.Grass,		120},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		0},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		11},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		56},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		0},
				{Obstacle.Type.Bale,		4},
				{Obstacle.Type.Bathtub,		2},
				{Obstacle.Type.Stockpile,		0},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		4},
				{Obstacle.Type.FallenTree,		0},
				{Obstacle.Type.Stump,		0},
				{Obstacle.Type.Bucket,		2},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		0},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		10},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		3},
				{Enemy.Type.Ghost,		1},
				{Enemy.Type.Soul,		1},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		1},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		2},
				{Enemy.Type.Goblin,		1},
				{Enemy.Type.Parasol,		1},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		4},
				{Item.Type.Parasol,		4},
			},
		},
		new StageData {
			limitTime = 150f,
			darkness = 0.6f,
			mist = 0f,
			sound = 1,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		142},
				{Terrain.Type.Grass,		10},
				{Terrain.Type.Muddy,		20},
				{Terrain.Type.Pavement,		-2},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		10},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		51},
				{Obstacle.Type.CartRight,		2},
				{Obstacle.Type.Well,		2},
				{Obstacle.Type.Bale,		2},
				{Obstacle.Type.Bathtub,		0},
				{Obstacle.Type.Stockpile,		2},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		6},
				{Obstacle.Type.FallenTree,		1},
				{Obstacle.Type.Stump,		1},
				{Obstacle.Type.Bucket,		5},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		1},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		2},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		2},
				{Enemy.Type.Ghost,		2},
				{Enemy.Type.Soul,		2},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		0},
				{Enemy.Type.Shadowman,		2},
				{Enemy.Type.Golem,		0},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		2},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		4},
				{Item.Type.Parasol,		2},
			},
		},
		new StageData {
			limitTime = 300f,
			darkness = 0.3f,
			mist = 0.9f,
			sound = 2,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		35},
				{Terrain.Type.Grass,		15},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		-2},
				{Terrain.Type.Ice,		122},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		3},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		22},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		0},
				{Obstacle.Type.Bale,		0},
				{Obstacle.Type.Bathtub,		1},
				{Obstacle.Type.Stockpile,		2},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		3},
				{Obstacle.Type.FallenTree,		4},
				{Obstacle.Type.Stump,		4},
				{Obstacle.Type.Bucket,		2},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		2},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		2},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		0},
				{Enemy.Type.Ghost,		0},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		0},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		2},
				{Enemy.Type.Goblin,		2},
				{Enemy.Type.Parasol,		2},
				{Enemy.Type.Kappa,		2},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		4},
				{Item.Type.Parasol,		0},
			},
		},
		new StageData {
			limitTime = 150f,
			darkness = 0.2f,
			mist = 0f,
			sound = 2,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		170},
				{Terrain.Type.Grass,		0},
				{Terrain.Type.Muddy,		0},
				{Terrain.Type.Pavement,		0},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		1},
				{Terrain.Type.Bridge,		4},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		11},
				{Obstacle.Type.Stone,		50},
				{Obstacle.Type.Tomb,		8},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		0},
				{Obstacle.Type.Bale,		0},
				{Obstacle.Type.Bathtub,		1},
				{Obstacle.Type.Stockpile,		2},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		3},
				{Obstacle.Type.FallenTree,		2},
				{Obstacle.Type.Stump,		1},
				{Obstacle.Type.Bucket,		15},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		8},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		1},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		0},
				{Enemy.Type.Ghost,		2},
				{Enemy.Type.Soul,		1},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		2},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		2},
				{Enemy.Type.Goblin,		2},
				{Enemy.Type.Parasol,		0},
				{Enemy.Type.Kappa,		3},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		4},
				{Item.Type.Parasol,		2},
			},
		},
		new StageData {
			limitTime = 150f,
			darkness = 0.4f,
			mist = 0.7f,
			sound = 1,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		152},
				{Terrain.Type.Grass,		0},
				{Terrain.Type.Muddy,		20},
				{Terrain.Type.Pavement,		-2},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		0},
				{Terrain.Type.Bridge,		0},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		10},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		51},
				{Obstacle.Type.CartRight,		6},
				{Obstacle.Type.Well,		2},
				{Obstacle.Type.Bale,		1},
				{Obstacle.Type.Bathtub,		1},
				{Obstacle.Type.Stockpile,		0},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		3},
				{Obstacle.Type.FallenTree,		1},
				{Obstacle.Type.Stump,		1},
				{Obstacle.Type.Bucket,		6},
				{Obstacle.Type.Lantern,		3},
				{Obstacle.Type.StupaFence,		1},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		3},
				{Enemy.Type.Ghost,		0},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		0},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		1},
				{Enemy.Type.Goblin,		3},
				{Enemy.Type.Parasol,		3},
				{Enemy.Type.Kappa,		0},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		4},
				{Item.Type.Parasol,		3},
			},
		},
		new StageData {
			limitTime = 180f,
			darkness = 0.4f,
			mist = 0.2f,
			sound = 1,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		150},
				{Terrain.Type.Grass,		0},
				{Terrain.Type.Muddy,		20},
				{Terrain.Type.Pavement,		0},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		1},
				{Terrain.Type.Bridge,		4},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		9},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		50},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		3},
				{Obstacle.Type.Bale,		0},
				{Obstacle.Type.Bathtub,		1},
				{Obstacle.Type.Stockpile,		0},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		5},
				{Obstacle.Type.FallenTree,		1},
				{Obstacle.Type.Stump,		1},
				{Obstacle.Type.Bucket,		5},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		0},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		0},
				{Obstacle.Type.Picket,		2},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		0},
				{Enemy.Type.Ghost,		0},
				{Enemy.Type.Soul,		1},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		2},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		0},
				{Enemy.Type.Goblin,		4},
				{Enemy.Type.Parasol,		2},
				{Enemy.Type.Kappa,		3},
				{Enemy.Type.Tengu,		0},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		10},
				{Item.Type.Amulet,		4},
				{Item.Type.Parasol,		2},
			},
		},
		new StageData {
			limitTime = 300f,
			darkness = 0.4f,
			mist = 0.5f,
			sound = 0,
			terrainTypeList = new Dictionary<Terrain.Type, int> (){
				{Terrain.Type.Soil,		90},
				{Terrain.Type.Grass,		40},
				{Terrain.Type.Muddy,		10},
				{Terrain.Type.Pavement,		30},
				{Terrain.Type.Ice,		0},
				{Terrain.Type.River,		4},
				{Terrain.Type.Bridge,		3},
			},
			obstacleTypeList = new Dictionary<Obstacle.Type, int> (){
				{Obstacle.Type.Tree,		8},
				{Obstacle.Type.Stone,		2},
				{Obstacle.Type.Tomb,		45},
				{Obstacle.Type.CartRight,		0},
				{Obstacle.Type.Well,		3},
				{Obstacle.Type.Bale,		0},
				{Obstacle.Type.Bathtub,		1},
				{Obstacle.Type.Stockpile,		2},
				{Obstacle.Type.Signboard,		0},
				{Obstacle.Type.Tower,		3},
				{Obstacle.Type.FallenTree,		1},
				{Obstacle.Type.Stump,		2},
				{Obstacle.Type.Bucket,		3},
				{Obstacle.Type.Lantern,		0},
				{Obstacle.Type.StupaFence,		5},
				{Obstacle.Type.Stupa,		0},
				{Obstacle.Type.LargeTreeRight,		0},
				{Obstacle.Type.Rubble,		5},
				{Obstacle.Type.Picket,		0},
			},
			enemyTypeList = new Dictionary<Enemy.Type, int> (){
				{Enemy.Type.Person,		0},
				{Enemy.Type.Ghost,		3},
				{Enemy.Type.Soul,		0},
				{Enemy.Type.Skeleton,		0},
				{Enemy.Type.Mummy,		0},
				{Enemy.Type.Shadowman,		0},
				{Enemy.Type.Golem,		3},
				{Enemy.Type.Goblin,		0},
				{Enemy.Type.Parasol,		3},
				{Enemy.Type.Kappa,		3},
				{Enemy.Type.Tengu,		1},
			},
			itemTypeList = new Dictionary<Item.Type, int> (){
				{Item.Type.Sandal,		3},
				{Item.Type.Hoe,		3},
				{Item.Type.Stone,		15},
				{Item.Type.Amulet,		8},
				{Item.Type.Parasol,		0},
			},
		},
	};


	public static TutorialStageData tutorialStageData = new TutorialStageData (){
		terrainTypeList = new List<Terrain.Type> (){
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Pavement,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
			Terrain.Type.Soil,
		},
		obstacleTypeList = new List<Obstacle.Type> (){
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.RubbleOff,
			Obstacle.Type.None,
			Obstacle.Type.RubbleOff,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.Picket,
			Obstacle.Type.Picket,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tree,
			Obstacle.Type.None,
			Obstacle.Type.Picket,
			Obstacle.Type.Picket,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tree,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Lantern,
			Obstacle.Type.Lantern,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tree,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.RubbleOff,
			Obstacle.Type.None,
			Obstacle.Type.RubbleOff,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Lantern,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tree,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.Tomb,
			Obstacle.Type.Tree,
			Obstacle.Type.RubbleOff,
			Obstacle.Type.None,
			Obstacle.Type.RubbleOff,
			Obstacle.Type.Tree,
			Obstacle.Type.Tomb,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
			Obstacle.Type.None,
		},
		enemyTypeList = new List<Enemy.Type> (){
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.Mummy,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.Ghost,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.Skeleton,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.Ghost,
			Enemy.Type.None,
			Enemy.Type.Skeleton,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
			Enemy.Type.None,
		},
		playerDataList = new List<TutorialStageData.PlayerData> (){
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 1,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 3,
				waitText = "墓で敵を倒せます。",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = true,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 1,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = true,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Right,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 1,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 1,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 3,
				waitText = "穴に落として埋めると敵を倒せます。",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = true,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Left,
				command = 0,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
			new TutorialStageData.PlayerData {
				compass = Player.Compass.Top,
				command = 2,
				isCommandNoneClick = false,
				canHoleCycle = false,
				waitTime = 0,
				waitText = "",
			},
		},
		enemyDataListList = new List<List<TutorialStageData.EnemyData>> (){
			new List<TutorialStageData.EnemyData>() {
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
			},
			new List<TutorialStageData.EnemyData>() {
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
			},
			new List<TutorialStageData.EnemyData>() {
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Left,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Left,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Left,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Top,
				},
			},
			new List<TutorialStageData.EnemyData>() {
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Left,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Left,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Left,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Left,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Left,
				},
			},
			new List<TutorialStageData.EnemyData>() {
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
				new TutorialStageData.EnemyData {
					compass = Enemy.Compass.Right,
				},
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
			new List<TutorialStageData.EnemyData>() {
			},
		},
	};